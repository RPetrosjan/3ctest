<?php

namespace AppBundle\Repository;

/**
 * BurgerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BurgerRepository extends \Doctrine\ORM\EntityRepository {
    /**
     * @param $id
     * @param null $direction
     * @return array
     */
    public function getBurgerId($id, $direction = null){

        if($id == false) {
            return $this->createQueryBuilder('db')
                ->orderBy('db.id', 'DESC')
                ->setMaxResults(1)
                ->getQuery()
                ->getArrayResult()
                ;
        }
        else{
            // We get max id of
            $maxID = $this->createQueryBuilder('db')
                ->select('db.id')
                ->orderBy('db.id', 'DESC')
                ->setMaxResults(1)
                ->getQuery()
                ->getArrayResult();

            if(!empty($maxID)) {
                $maxID = current($maxID)['id'];
            }

            $minID =  $this->createQueryBuilder('db')
                ->select('db.id')
                ->orderBy('db.id', 'ASC')
                ->setMaxResults(1)
                ->getQuery()
                ->getArrayResult();

            if(!empty($minID)) {
                $minID = current($minID)['id'];
            }

            $result = null;
            if(strcmp($direction,'next') == 0) {
                if($maxID >= $id) {
                    $result = $this->createQueryBuilder('db')
                        ->where('db.id >= :idburger')
                        ->setParameters([
                            'idburger' => $id,
                        ])
                        ->setMaxResults(1)
                        ->getQuery()
                        ->getArrayResult()
                    ;
                }
                else {
                    $result = $this->createQueryBuilder('db')
                        ->orderBy('db.id', 'ASC')
                        ->setMaxResults(1)
                        ->getQuery()
                        ->getArrayResult()
                    ;
                }
            }
            elseif(strcmp($direction,'prev') == 0) {
                if($minID <= $id) {
                    $result = $this->createQueryBuilder('db')
                        ->orderBy('db.id', 'DESC')
                        ->where('db.id <= :idburger')
                        ->setParameters([
                            'idburger' => $id,
                        ])
                        ->setMaxResults(1)
                        ->getQuery()
                        ->getArrayResult()
                    ;
                }
                else {
                    $result = $this->createQueryBuilder('db')
                        ->orderBy('db.id', 'DESC')
                        ->setMaxResults(1)
                        ->getQuery()
                        ->getArrayResult()
                    ;
                }
            }

            return $result;
        }
    }

    /**
     * @return array
     */
    public function getAllBurger() {
        return $this->createQueryBuilder('db')
            ->getQuery()
            ->getArrayResult();
    }
}
